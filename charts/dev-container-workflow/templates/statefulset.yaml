apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "dev-container-workflow.fullname" . }}
  labels:
    {{- include "dev-container-workflow.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}
  selector:
    matchLabels:
      {{- include "dev-container-workflow.selectorLabels" . | nindent 6 }}
  volumeClaimTemplates:
  - metadata:
      name: "home"
    spec:
      accessModes: [ {{ .Values.volume.accessMode }} ]
      storageClassName: {{ .Values.volume.storageClass | quote }}
      resources:
        requests:
          storage: {{ .Values.volume.request | quote }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dev-container-workflow.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 30
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dev-container-workflow.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "longshoreman:latest"
          # image: "{{ .Values.image.repository | default .Chart.Name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 2222
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 2222
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 2222
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: "passwd"
            mountPath: "/etc/passwd"
            subPath: "passwd"
          - name: "home"
            mountPath: "/home"
          - name: "aws"
            mountPath: "/mnt/aws"
          {{- if or .Values.ssh.keysSecretName .Values.ssh.keys }}
          - name: "ssh"
            mountPath: "/mnt/ssh"
          {{- end }}
          - name: "git"
            mountPath: "/mnt/git"
      initContainers:
        - name: "{{ .Chart.Name }}-init"
          env:
            - name: "SCRIPTS_VOLUME"
              value: "/scripts"
            - name: "HOME"
              value: "/home"
            - name: "AWS_VOLUME"
              value: "/mnt/aws"
            - name: "GIT_VOLUME"
              value: "/mnt/git"
            - name: "SSH_VOLUME"
              value: "/mnt/ssh"
            - name: "ASDF_VERSION"
              value: {{ .Values.asdf.version | quote }}
            - name: "ASDF_PLUGINS"
              value: {{ .Values.asdf.plugins | quote }}
            - name: "KREW_PLUGINS"
              value: {{ .Values.krew.plugins | quote }}
          {{- with .Values.initSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "longshoreman-init:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: "/"
          command: ['sh', '-c', 'sleep 15000']
          volumeMounts:
          - name: "passwd-init"
            mountPath: "/etc/passwd"
            subPath: "passwd"
          - name: "home"
            mountPath: "/home"
          - name: "scripts"
            mountPath: "/scripts"
          {{- if or .Values.ssh.keysSecretName .Values.ssh.keys }}
          - name: "git"
            mountPath: "/git"
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: "passwd-init"
        secret:
          secretName: {{ printf "%s-passwd-init" (include "dev-container-workflow.fullname" .) }}
          defaultMode: 0644
      - name: "passwd"
        secret:
          secretName: {{ printf "%s-passwd" (include "dev-container-workflow.fullname" .) }}
          defaultMode: 0644
      - name: "scripts"
        configMap:
          name: {{ printf "%s-scripts" (include "dev-container-workflow.fullname" .) }}
          defaultMode: 0550
      - name: "git"
        configMap:
          name: {{ printf "%s-git" (include "dev-container-workflow.fullname" .) }}
      - name: "ssh"
        projected:
          sources:
            {{- if .Values.ssh.keysSecretName }}
            - secret:
                name: {{ .Values.ssh.keysSecretName | quote }}
            {{- else if .Values.ssh.keys }}
            - secret:
                name: {{ printf "%s-ssh-keys" (include "dev-container-workflow.fullname" .) }}
            {{- end }}
            - configMap:
                name: {{ printf "%s-ssh" (include "dev-container-workflow.fullname" .) }}
      - name: "aws"
        projected:
          sources:
            - secret:
                {{- if .Values.aws.credentialsSecretName }}
                name: {{ .Values.aws.credetialsSecretName }}
                {{- else }}
                name: {{ printf "%s-aws-credentials" (include "dev-container-workflow.fullname" .) }}
                {{- end }}
            - configMap:
                name: {{ printf "%s-aws" (include "dev-container-workflow.fullname" .) }}
