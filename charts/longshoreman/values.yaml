# Override the name of this Helm chart within rendered manifests
nameOverride: ""
# Override the name of this Helm chart in addition to its release within rendered manifests
fullnameOverride: ""

# Define POSIX users, in addition to built-in users.
# By default there is one passwordless user ("user") that can log in, which has UID 1000 and GID 1000.
# There is also root, for which login is impossible. Users may sudo, provided they are added to the "sudo" group.
users:
  - userName: "user"
    uid:
    primaryGroup:
    gid:
    additionalGroups: []
    # This is a password as it appears in /etc/shadow. If you are unsure of how it is generated, use `adduser` locally.
    # Setting a password will disable passwordless login.
    hashedPassword:

# Define POSIX groups, in addition to built-in groups.
groups:
  - groupName:
    # Explicitly set a group ID. If empty, the system will automatically assign a GID.
    gid:

image:
  # Overrides the OCI registry from the cluster default
  registry:
  # Overrides the image/repository name
  repository: 
  # Overrides the image tag whose default is the chart appVersion.
  tag: 
  # By default use container image cache
  pullPolicy: IfNotPresent

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000
  fsGroupChangePolicy: "OnRootMismatch"

# Init container configuration. Must be able to read/write root fs as root.
init:
  SecurityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: false
  image:
    registry:
    # Defaults to chart name with a suffix of "-init"
    repository:
    tag:
    pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 7681

resources:
  requests:
    cpu: 1
    memory: 1Gi

volume:
  accessMode:
  storageClass:
  request:

podAnnotations: {}

nodeSelector: {}

tolerations: []

affinity: {}
