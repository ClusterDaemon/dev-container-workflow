{{- $image := .Values.image.repository | default (include "longshoreman.name" .) -}}
{{- $imageTag := .Values.image.tag | default .Chart.AppVersion -}}
{{- $initImage := .Values.init.image.repository | default (printf "%s-init" (include "longshoreman.name" .)) -}}
{{- $initImageTag := .Values.init.image.tag | default .Chart.AppVersion -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "longshoreman.fullname" . }}
  labels:
    {{- include "longshoreman.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}
  selector:
    matchLabels:
      {{- include "longshoreman.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "longshoreman.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 30
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "longshoreman.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ .Values.user.uid }}
        runAsGroup: {{ .Values.user.gid }}
        fsGroup: {{ .Values.user.gid }}
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ (printf "%s:%s" $image $imageTag) | trimPrefix "/" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ttyd
              containerPort: 7681
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 7681
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 7681
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: "home"
              mountPath: "/home"
            - name: "config"
              mountPath: "/etc/opt/config"
            - name: "secret"
              mountPath: "/etc/opt/secret"
            - name: "users"
              mountPath: "/etc/opt/users"
      initContainers:
        - name: "{{ .Chart.Name }}-init"
          env:
            - name: "USERS_DIR"
              value: "/etc/opt/users"
          args:
            - {{ .Values.user | toJson | quote }}
          {{- with .Values.init.SecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ printf "%s:%s" $initImage $initImageTag | trimPrefix "/" }}
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          volumeMounts:
            - name: "users"
              mountPath: "/etc/opt/users"
            - name: "home"
              mountPath: "/home"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: "home"
          # Set this to hostpath until a better built-in persistence layer is in place.
          hostPath:
            Directory: "/home"
        - name: "users"
          emptyDir:
            medium: "Memory"
            sizeLimit: "10Mi"
        - name: "config"
          configMap:
            name: {{ printf "%s-config" (include "longshoreman.fullname" .) }}
            defaultMode: 0660
            optional: true
        - name: "secret"
          secret:
            secretName: {{ printf "%s-secret" (include "longshoreman.fullname" .) }}
            defaultMode: 0660
            optional: true
